
/*Есть строка символов, признаком конца, которой является ;. В строке могут быть фигурные, круглые, квадратные
скобки. Скобки могут быть открывающими и закрывающими.
Необходимо проверить корректность расстановки скобок.
При этом необходимо, чтобы выполнились следующие
правила:
1. Каждая открывающая скобка должна иметь справа
такую же закрывающую. Обратное также должно быть
верно.
2. Открывающие и закрывающие пары скобок разных
типов должны быть правильно расположены по отношению друг к другу.
■ Пример правильной строки: ({x-y-z}*[x+2y]-(z+4x));
■ Пример неправильной строки: ([x-y-z}*[x+2y)-{z+4x)].
Если все правила соблюдены выведите информационное
сообщение о корректности строки, иначе покажите строку
до места возникновения первой ошибки.*/
#include<iostream>
#include<stack>
#include<string>

void TestString(std::string test_str); // определение функции проверки 

int main()
{
	std::string str1, str2;//создал примеры
	str1 = "(a * (b * 3 + {c - d + [x % 6] * [x % 12] - 30} + 24) - a2);";// верный
	str2 = " (a * (b * 3 + {c - d + [x % 6] * {x % 12] - 30} + 24) - a2);";// с ошибкой
	std::cout << " \ntest sting 1 >>\n";
	TestString(str1);//передаю пример в функцию по проверке
	std::cout << " \ntest sting 2 >>\n";
	TestString(str2);
	return 0;// конец программы
}

void TestString(std::string test_str) // функция проверки
{
	std::stack<char>steck;// создал стек
	
	for (size_t i = 0; i < test_str.length()-1; i++)//прохожу стоку с переданным примером
	{
		std::cout << test_str[i]; // вывожу посимвольно
		if (test_str[i] == '('
			|| test_str[i] == '['  // ищу скобки
			|| test_str[i] == '{')
			steck.push(test_str[i]); // записываю в стек то что нашел

		if (test_str[i] == ')') // проверяю закрытие
			if (steck.top() == '(') steck.pop(); // если в стеке верно, то удаляю из стека
			else
			{
				std::cout << "<-- error! \n\n"; // если стек и скобка закрытия не сошлись, то ошибка и брейк.
				break;
			}
		if (test_str[i] == '}')
			if (steck.top() == '{') steck.pop();
			else
			{
				std::cout << "<-- error! \n\n";
				break;
			}
		if (test_str[i] == ']')
			if (steck.top() == '[') steck.pop();
			else
			{
				std::cout << "<-- error! \n\n";
				break;
			}
	}
	if (steck.empty()) std::cout << "\n there are no errors.\n"; // если стек пуст, значит ошибок нет.
}